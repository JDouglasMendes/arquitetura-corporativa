// <auto-generated />
using System;
using Codeizi.Curso.RH.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Codeizi.Curso.RH.Infra.Data.Migrations
{
    [DbContext(typeof(CodeiziContext))]
    [Migration("20200721223244_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Codeizi.Curso.RH.Domain.Colaboradores.Colaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnName("DataDeNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("ObservacaoContratual")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Colaborador");
                });

            modelBuilder.Entity("Codeizi.Curso.RH.Domain.Colaboradores.Contrato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ColaboradorId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnName("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnName("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<double>("SalarioContratual")
                        .HasColumnName("SalarioContratual")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId1");

                    b.ToTable("Contrato");
                });

            modelBuilder.Entity("Codeizi.Curso.RH.Domain.Colaboradores.Colaborador", b =>
                {
                    b.OwnsOne("Codeizi.Curso.RH.Domain.SharedKernel.ValueObjects.NomePessoa", "Nome", b1 =>
                        {
                            b1.Property<Guid>("ColaboradorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Nome")
                                .IsRequired()
                                .HasColumnName("Nome")
                                .HasColumnType("nvarchar(100)")
                                .HasMaxLength(100);

                            b1.Property<string>("Sobrenome")
                                .IsRequired()
                                .HasColumnName("Sobrenome")
                                .HasColumnType("nvarchar(100)")
                                .HasMaxLength(100);

                            b1.HasKey("ColaboradorId");

                            b1.ToTable("Colaborador");

                            b1.WithOwner()
                                .HasForeignKey("ColaboradorId");
                        });
                });

            modelBuilder.Entity("Codeizi.Curso.RH.Domain.Colaboradores.Contrato", b =>
                {
                    b.HasOne("Codeizi.Curso.RH.Domain.Colaboradores.Colaborador", "Colaborador")
                        .WithMany("Contratos")
                        .HasForeignKey("ColaboradorId1")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
